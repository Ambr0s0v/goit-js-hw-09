{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAS,SAACC,EAAQC,GACzBC,YAAW,WACLN,EACFI,EAAQ,sBAAqCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,MAEnDM,EAAO,oBAAmCE,OAAfT,EAAS,QAAYS,OAANR,G,GAE5CA,E,IAZKS,SAASC,cAAc,SAoC/BC,iBAAiB,UAlBtB,SAAyBC,GACvBA,EAAMC,iBAON,IANA,IAA0BC,EAAAF,EAAMG,cAAcC,SAAzChB,EAAqBc,EAArBd,MAAMiB,EAAeH,EAAfG,KAAKC,EAAUJ,EAAVI,OAEZC,EAAYC,OAAOpB,EAAMqB,OACzBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAWH,OAAOF,EAAOG,OAErBG,EAAM,EAAGA,GAAOD,EAAUC,IAChC1B,EAAc0B,EAAKL,GAChBM,MAAK,SAACC,G,OAAYC,EAAA/B,GAASgC,OAAOF,QAAQA,E,IAC1CG,OAAM,SAACC,G,OAAUH,EAAA/B,GAASgC,OAAOG,QAAQD,E,IAE5CX,GAAaG,EAEfV,EAAMG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise ((resolve,reject)=>{\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`Fullfilled promise ${position} on ${delay}!`);\n        } else {\n          reject(`Rejected promise ${position} on ${delay}`);\n        }\n      },delay)\n    \n  })  \n}\n\n\nfunction onSubmitHandler(event){\n  event.preventDefault();\n  let {delay,step,amount} = event.currentTarget.elements;\n  \n  let timeDelay = Number(delay.value);\n  let increment = Number(step.value);\n  let quantity = Number(amount.value);\n  \n  for(let pos = 1; pos <= quantity; pos++){\n    createPromise(pos, timeDelay)\n      .then((success) => Notiflix.Notify.success(success))\n      .catch((error) => Notiflix.Notify.failure(error));\n    \n    timeDelay += increment;\n  }  \n  event.currentTarget.reset()\n}\n\nform.addEventListener(\"submit\",onSubmitHandler);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","timeDelay","Number","value","increment","quantity","pos","then","success","$parcel$interopDefault","Notify","catch","error","failure","reset"],"version":3,"file":"03-promises.6ebd5d7c.js.map"}